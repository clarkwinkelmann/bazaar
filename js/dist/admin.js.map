{"version":3,"sources":["webpack://@flagrow/bazaar/webpack/bootstrap","webpack://@flagrow/bazaar/external \"flarum.core.compat['app']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['Model']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['components/Button']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['Component']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['components/Badge']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['helpers/icon']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['components/Modal']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['utils/computed']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['components/LinkButton']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['extend']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['utils/mixin']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['components/SettingsModal']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['components/Switch']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['helpers/fullTime']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['utils/ItemList']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['utils/extract']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['components/AdminNav']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['components/AdminLinkButton']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['components/Dropdown']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['components/Placeholder']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['utils/extractText']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['utils/saveSettings']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['helpers/humanTime']\"","webpack://@flagrow/bazaar/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@flagrow/bazaar/./src/admin/models/Extension.js","webpack://@flagrow/bazaar/./src/admin/models/Task.js","webpack://@flagrow/bazaar/./src/admin/utils/ExtensionRepository.js","webpack://@flagrow/bazaar/./src/admin/utils/popupPromise.js","webpack://@flagrow/bazaar/./src/admin/components/ExtensionListItem.js","webpack://@flagrow/bazaar/./src/admin/components/BazaarLoader.js","webpack://@flagrow/bazaar/./src/admin/components/ExtensionList.js","webpack://@flagrow/bazaar/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@flagrow/bazaar/./src/admin/components/CustomCheckbox.js","webpack://@flagrow/bazaar/./src/admin/components/ExtensionSearch.js","webpack://@flagrow/bazaar/./src/admin/utils/debounce.js","webpack://@flagrow/bazaar/./src/admin/modals/FilePermissionsModal.js","webpack://@flagrow/bazaar/./src/admin/modals/MemoryLimitModal.js","webpack://@flagrow/bazaar/./src/admin/modals/BazaarConnectModal.js","webpack://@flagrow/bazaar/./src/admin/modals/BazaarSettingsModal.js","webpack://@flagrow/bazaar/./src/admin/modals/DashboardModal.js","webpack://@flagrow/bazaar/./src/admin/components/BazaarPageHeader.js","webpack://@flagrow/bazaar/./src/admin/components/BazaarPage.js","webpack://@flagrow/bazaar/./src/admin/utils/TaskRepository.js","webpack://@flagrow/bazaar/./src/admin/components/TaskListItem.js","webpack://@flagrow/bazaar/./src/admin/components/TasksPage.js","webpack://@flagrow/bazaar/./src/admin/index.js","webpack://@flagrow/bazaar/./src/admin/addBazaarPage.js","webpack://@flagrow/bazaar/./src/admin/addTasksPage.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","Extension","mixin","Model","package","attribute","title","description","license","icon","locale","discuss_link","landing_link","downloads","installed","enabled","pending","installed_version","highest_version","outdated","flarum_id","premium","subscribed","can_install","computed","flarumCompatibilityCurrent","can_uninstall","can_enable","can_disable","canCheckout","canUnsubscribe","canSafelyUnsubscribe","favorites","favorited","flarumCompatibilityLatest","flarumCompatibilityNext","Task","status","command","output","created_at","started_at","finished_at","ExtensionRepository","loading","this","extensions","prop","requestError","redraw","installExtension","extension","_this","app","request","method","url","forum","timeout","data","id","then","response","updateExtensionInRepository","installFailure","resetNavigation","loadNextPage","uninstallExtension","_this2","uninstallFailure","favoriteExtension","_this3","favorite","premiumExtensionSubscribe","buy","settings","waitForUrl","width","height","$window","$","window","deferred","popup","open","interval","setInterval","closed","clearInterval","reject","document","URL","close","resolve","e","promise","popupPromise","location","reload","alert","translator","trans","premiumExtensionUnsubscribe","updateExtension","_this4","toggleExtension","_this5","disableExtension","enableExtension","getExtensionIndex","findIndex","ext","store","pushObject","ExtensionListItem","config","isInitialized","props","tooltip","container","view","connected","controls","controlItems","toArray","badges","repository","className","length","data-id","style","split","class","Button_default","a","onclick","Dropdown_default","buttonClassName","menuClassName","items","ItemList","favoriteTrans","add","Button","component","children","extensionSettings","disabled","Badge_default","type","label","new","Component","BazaarLoader","error","hidden","LinkButton","href","target","ExtensionList","init","moreResults","resultMeta","refresh","current","pages_current","total","pages_total","loadMore","text","authorized","Placeholder","map","update","params","clear","loadResults","results","parseResults","offset","requestParams","page","include","join","find","push","apply","payload","links","next","meta","lazyRedraw","out","filter","sort","sortMap","q","param","relevance","_extends","assign","arguments","source","CustomCheckbox","attrs","state","extractText","extract","onchange","getButtonContent","ExtensionSearch","func","wait","immediate","updateDebounce","onsubmit","context","args","callNow","clearTimeout","setTimeout","oninput","withAttr","term","search","placeholder","isToggled","checked","toggleFilter","is","indexOf","splice","FilePermissionsModal","content","permissions","file_permissions","paths","forEach","path","Modal","MemoryLimitModal","memory_requested","memory_limit","required","limit","BazaarConnectModal","flagrowHost","host","connect","redirect","BazaarSettingsModal","form","for","Switch","setting","bidi","SettingsModal","DashboardModal","syncing","updateSetting","submitButton","_saveSettings","saveSettings","BazaarPageHeader","header","buttons","concat","pagesButtons","settingsButton","requirementsButtons","connectedButtons","modal","show","memory_limit_met","components","routeName","route","active","BazaarPage","extensionList","updateResults","render","stickyParams","tasks","nextPageUrl","result","newTasks","createRecord","TaskListItem","extended","task","iconName","humanTime","colspan","fullTime","TasksPage","TaskRepository","loader","taskGroups","group","currentGroup","today","Date","setHours","taskDate","initializers","models","routes","extend","AdminNav","AdminLinkButton"],"mappings":"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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 23);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['Component'];","module.exports = flarum.core.compat['components/Badge'];","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['utils/computed'];","module.exports = flarum.core.compat['components/LinkButton'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['utils/mixin'];","module.exports = flarum.core.compat['components/SettingsModal'];","module.exports = flarum.core.compat['components/Switch'];","module.exports = flarum.core.compat['helpers/fullTime'];","module.exports = flarum.core.compat['utils/ItemList'];","module.exports = flarum.core.compat['utils/extract'];","module.exports = flarum.core.compat['components/AdminNav'];","module.exports = flarum.core.compat['components/AdminLinkButton'];","module.exports = flarum.core.compat['components/Dropdown'];","module.exports = flarum.core.compat['components/Placeholder'];","module.exports = flarum.core.compat['utils/extractText'];","module.exports = flarum.core.compat['utils/saveSettings'];","module.exports = flarum.core.compat['helpers/humanTime'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\nimport computed from 'flarum/utils/computed';\n\nexport default class Extension extends mixin(Model, {\n    package: Model.attribute('package'),\n    title: Model.attribute('title'),\n    description: Model.attribute('description'),\n    license: Model.attribute('license'),\n    icon: Model.attribute('icon'),\n    locale: Model.attribute('locale'),\n\n    discuss_link: Model.attribute('discuss_link'),\n    landing_link: Model.attribute('landing_link'),\n\n    downloads: Model.attribute('downloads'),\n\n    installed: Model.attribute('installed'),\n    enabled: Model.attribute('enabled'),\n    pending: Model.attribute('pending'),\n    installed_version: Model.attribute('installed_version'),\n    highest_version: Model.attribute('highest_version'),\n    outdated: Model.attribute('outdated'),\n\n    flarum_id: Model.attribute('flarum_id'),\n\n    premium: Model.attribute('premium'),\n    subscribed: Model.attribute('subscribed'),\n\n    // Install/uninstall\n    // Extension is available if it's either non-premium or premium & subscribed\n    can_install: computed('installed', 'premium', 'subscribed', 'flarumCompatibilityCurrent', (installed, premium, subscribed, flarumCompatibilityCurrent) => !installed && flarumCompatibilityCurrent && (!premium || subscribed)),\n    can_uninstall: computed('installed', 'enabled', (installed, enabled) => installed && !enabled),\n\n    // Enable/disable\n    can_enable: computed('installed', 'enabled', (installed, enabled) => installed && !enabled),\n    can_disable: computed('installed', 'enabled', (installed, enabled) => installed && enabled),\n\n    canCheckout: Model.attribute('canCheckout'),\n    canUnsubscribe: Model.attribute('canUnsubscribe'),\n    canSafelyUnsubscribe: computed('canUnsubscribe', 'installed', (canUnsubscribe, installed) => canUnsubscribe && !installed),\n\n    favorites: Model.attribute('favorites'),\n    favorited: Model.attribute('favorited'),\n\n    flarumCompatibilityLatest: Model.attribute('flarumCompatibilityLatest'),\n    flarumCompatibilityNext: Model.attribute('flarumCompatibilityNext'),\n    flarumCompatibilityCurrent: Model.attribute('flarumCompatibilityCurrent'),\n}) {}\n","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class Task extends mixin(Model, {\n    status: Model.attribute('status'),\n    command: Model.attribute('command'),\n    package: Model.attribute('package'),\n    output: Model.attribute('output'),\n    created_at: Model.attribute('created_at'),\n    started_at: Model.attribute('started_at'),\n    finished_at: Model.attribute('finished_at')\n}) {}\n","import app from \"flarum/app\";\nimport popupPromise from './popupPromise';\n\nexport default class ExtensionRepository {\n    constructor(loading) {\n        this.extensions = m.prop([]);\n        this.loading = loading;\n    }\n\n    /**\n     * Handles a request error\n     */\n    requestError() {\n        // If an error occured, we can clear the loading overlay\n        // The error means it's not processing anymore\n        this.loading('error');\n\n        // Depending on how fast the \"Oops! Something went wrong\" popup appears,\n        // the loading change is not taken into account. Use redraw to force remove the overlay\n        m.redraw();\n    }\n\n    /**\n     * Install an extension.\n     * @param extension\n     */\n    installExtension(extension) {\n        this.loading(true);\n\n        app.request({\n            method: 'POST',\n            url: app.forum.attribute('apiUrl') + '/bazaar-extensions',\n            timeout: 0,\n            data: {\n                id: extension.id()\n            }\n        }).then(response => {\n            return this.updateExtensionInRepository(response)\n        }).catch(() => this.requestError());\n    }\n\n    /**\n     * Handles an installation failure.\n     * @param extension\n     */\n    installFailure(extension) {\n        this.resetNavigation();\n        this.loadNextPage();\n    }\n\n    /**\n     * Uninstall an extension.\n     * @param extension\n     */\n    uninstallExtension(extension) {\n        this.loading(true);\n\n        app.request({\n            method: 'DELETE',\n            timeout: 0,\n            url: app.forum.attribute('apiUrl') + '/bazaar-extensions/' + extension.id()\n        }).then(response => {\n            return this.updateExtensionInRepository(response)\n        }).catch(() => this.requestError());\n    }\n\n    /**\n     * Handles an uninstall failure.\n     * @param extension\n     */\n    uninstallFailure(extension) {\n        this.resetNavigation();\n        this.loadNextPage();\n    }\n\n    /**\n     * Processing (de-) favoriting extensions.\n     * @param extension\n     */\n    favoriteExtension(extension) {\n        this.loading(true);\n\n        app.request({\n            method: 'post',\n            url: app.forum.attribute('apiUrl') + '/bazaar-extensions/' + extension.id() + '/favorite',\n            data: {\n                favorite: extension.favorited() != true\n            }\n        }).then(response => {\n            return this.updateExtensionInRepository(response)\n        }).catch(() => this.requestError());\n    }\n\n    premiumExtensionSubscribe(extension, buy = true) {\n        //this.loading(true);\n\n        const popup = popupPromise({\n            url: app.forum.attribute('apiUrl') + '/bazaar/redirect/' + (buy ? '' : 'un') + 'subscribe/' + extension.id(),\n            waitForUrl: app.forum.attribute('apiUrl') + '/bazaar/callback/subscription',\n        });\n\n        popup.then(() => {\n            window.location.reload();\n        }).catch(() => {\n            alert(app.translator.trans('flagrow-bazaar.admin.page.extension.subscribe_check_failed'));\n        });\n    }\n\n    premiumExtensionUnsubscribe(extension) {\n        this.premiumExtensionSubscribe(extension, false);\n    }\n\n    /**\n     * Updates an extension.\n     * @param extension\n     */\n    updateExtension(extension) {\n        this.loading(true);\n\n        app.request({\n            url: app.forum.attribute('apiUrl') + '/bazaar-extensions/' + extension.id(),\n            timeout: 0,\n            method: 'PATCH'\n        }).then(response => {\n            return this.updateExtensionInRepository(response)\n        }).catch(() => this.requestError());\n    }\n\n    /**\n     * Toggles an extension (enable or disable).\n     * @param extension\n     */\n    toggleExtension(extension) {\n        this.loading(true);\n\n        const enabled = extension.enabled();\n\n        app.request({\n            url: app.forum.attribute('apiUrl') + '/bazaar-extensions/' + extension.id() + '/toggle',\n            method: 'PATCH',\n            data: {enabled: !enabled}\n        }).then(response => {\n            return this.updateExtensionInRepository(response)\n        }).catch(() => this.requestError());\n    }\n\n    /**\n     * Disable an extension.\n     * @param extension\n     */\n    disableExtension(extension) {\n        return this.toggleExtension(extension);\n    }\n\n    /**\n     * Enable an extension.\n     * @param extension\n     */\n    enableExtension(extension) {\n        return this.toggleExtension(extension);\n    }\n\n    /**\n     * Loads the index of this extension in the extensions array.\n     * @param extension\n     * @returns {number}\n     */\n    getExtensionIndex(extension) {\n        return this.extensions().findIndex(ext => ext.id() == extension.id());\n    }\n\n    /**\n     * Updates an extension and takes care of updating its state in the extension page too.\n     * @param extension\n     * @param property\n     * @param value\n     */\n    updateExtensionInRepository(response) {\n        this.loading(false);\n\n        let extension = app.store.pushObject(response.data);\n        this.extensions()[this.getExtensionIndex(extension)] = extension;\n\n        m.redraw();\n\n        return extension;\n    }\n}\n","export default function(settings = {})\n{\n    const url = settings.url || '/';\n    const waitForUrl = settings.waitForUrl || null;\n    const width = settings.width || 600;\n    const height = settings.height || 400;\n    const $window = $(window);\n\n    // The new Promise polyfill of Mithril v1 is a lot better\n    const deferred = m.deferred();\n\n    const popup = window.open(url, 'bazaarPopup',\n        `width=${width},` +\n        `height=${height},` +\n        `top=${$window.height() / 2 - height / 2},` +\n        `left=${$window.width() / 2 - width / 2},` +\n        'status=no,scrollbars=no,resizable=no');\n\n    const interval = window.setInterval(() => {\n        try {\n            if (popup.closed) {\n                window.clearInterval(interval);\n                deferred.reject();\n            } else if (popup.document.URL === waitForUrl) {\n                window.clearInterval(interval);\n                popup.close();\n                deferred.resolve();\n            }\n        } catch (e) {\n            // Ignore errors, these will be cross-origin exceptions\n        }\n    }, 500);\n\n    return deferred.promise;\n}\n","import Component from \"flarum/Component\";\nimport icon from \"flarum/helpers/icon\";\nimport ItemList from \"flarum/utils/ItemList\";\nimport Button from \"flarum/components/Button\";\nimport Dropdown from \"flarum/components/Dropdown\";\nimport Badge from 'flarum/components/Badge';\n\nexport default class ExtensionListItem extends Component {\n    config(isInitialized) {\n        if (isInitialized) return;\n\n        // Be careful to always use a `key` with this component or this mis-align the tooltips if items are added or removed\n        if (this.props.extension.description()) this.$('.ExtensionIcon').tooltip({container: 'body'});\n    }\n\n    view() {\n        const extension = this.props.extension;\n        const connected = this.props.connected || false;\n        const controls = this.controlItems(extension, connected).toArray();\n        const badges = this.badges(extension).toArray();\n        const repository = this.props.repository;\n\n        return <div className={\n            'Extension ' +\n            (extension.enabled() ? 'enabled ' : 'disabled ') +\n            (extension.installed() ? 'installed ' : 'uninstalled ') +\n            (extension.outdated() ? 'outdated ' : '') +\n            (extension.pending() ? 'pending ' : '') +\n            (controls.length > 0 ? 'hasControls' : '') +\n            (extension.favorited() ? 'favorited' : '') +\n            (extension.flarumCompatibilityCurrent() ? ' compatible' : 'incompatible')\n        } key={extension.id()} data-id={extension.id()}>\n            <span className=\"Extension-icon\" style={extension.icon() || ''} title={extension.description()}>\n              {extension.icon() ? icon('fas fa-' + extension.icon().name) : ''}\n            </span>\n            <div className=\"Extension-meta\">\n                <ul className=\"ExtensionListItem-badges badges\">\n                    {badges}\n                </ul>\n                <label className=\"Meta-Title\">\n                    {extension.title() || extension.package()}\n                </label>\n\n                <div className=\"Meta-Item description\">\n                    {extension.description()}\n                </div>\n\n                <div className=\"Meta-Item vendor\">\n                    <div className=\"label\"><i className=\"fas fa-user\"></i> {app.translator.trans('flagrow-bazaar.admin.page.extension.vendor')}</div>\n                    <div className=\"value\">{extension.package().split('/')[0]}</div>\n                </div>\n                <div className=\"Meta-Item downloads\">\n                    <div className=\"label\"><i class=\"fas fa-download\"></i> {app.translator.trans('flagrow-bazaar.admin.page.extension.downloads')}</div>\n                    <div className=\"value\">{extension.downloads()}</div>\n                </div>\n                <div className=\"Meta-Item favorites\">\n                    <div className=\"label\"><i className=\"fas fa-heart\"></i> {app.translator.trans('flagrow-bazaar.admin.page.extension.favorites')}</div>\n                    <div className=\"value\">{extension.favorites()}</div>\n                </div>\n                {extension.installed_version() ? (\n                    <div className=\"Meta-Item version\">\n                        <div className=\"label\">{app.translator.trans('flagrow-bazaar.admin.page.extension.installed_version')}</div>\n                        <div className=\"value\">{extension.installed_version()}</div>\n                    </div>\n                ) : ''}\n                <div className=\"Meta-Item version\">\n                    <div className=\"label\">{app.translator.trans('flagrow-bazaar.admin.page.extension.highest_version')}</div>\n                    <div className=\"value\">{extension.highest_version()}</div>\n                </div>\n                <div className=\"Extension-controls\">\n                    {connected ? (\n                        <Button\n                            className=\"Button Button--icon Button--flat favorite\"\n                            icon={(extension.favorited() ? 'fas' : 'far') + ' fa-heart'}\n                            onclick={() => repository.favoriteExtension(extension)}>\n                        </Button>\n                    ) : ''}\n                    {extension.discuss_link() ? (\n                        <Button\n                            className=\"Button Button--icon Button--flat\"\n                            icon=\"fas fa-comments\"\n                            onclick={() => window.open(extension.discuss_link())}>\n                        </Button>\n                    ) : ''}\n                    {extension.landing_link() ? (\n                        <Button\n                            className=\"Button Button--icon Button--flat\"\n                            icon=\"fas fa-chart-line\"\n                            onclick={() => window.open(extension.landing_link())}>\n                        </Button>\n                    ) : ''}\n                    {controls.length > 0 ? (\n                        <Dropdown\n                            buttonClassName=\"Button Button--icon Button--flat\"\n                            menuClassName=\"Dropdown-menu--right\"\n                            icon=\"fas fa-ellipsis-h\">\n                            {controls}\n                        </Dropdown>\n                    ) : ''}\n                </div>\n            </div>\n        </div>;\n    }\n\n    controlItems(extension, connected) {\n        const items = new ItemList();\n        const repository = this.props.repository;\n\n        const favoriteTrans = extension.favorited() ? 'flagrow-bazaar.admin.page.button.remove_favorite_button' : 'flagrow-bazaar.admin.page.button.favorite_button';\n\n        if (connected) {\n            items.add('favorite', Button.component({\n                icon: 'fas fa-heart',\n                children: app.translator.trans(favoriteTrans),\n                onclick: () => {\n                    repository.favoriteExtension(extension);\n                }\n            }));\n        }\n\n        if (! extension.pending()) {\n            if (extension.enabled() && app.extensionSettings[name]) {\n                items.add('settings', Button.component({\n                    icon: 'fas fa-cog',\n                    children: app.translator.trans('core.admin.extensions.settings_button'),\n                    onclick: app.extensionSettings[name]\n                }));\n            }\n\n            if (extension.can_uninstall()) {\n                items.add('uninstall', Button.component({\n                    icon: 'fas fa-minus-square',\n                    children: app.translator.trans('flagrow-bazaar.admin.page.button.uninstall'),\n                    onclick: () => {\n                        this.props.extension = repository.uninstallExtension(extension);\n                    }\n                }));\n            }\n\n            if (extension.can_enable()) {\n                items.add('enable', Button.component({\n                    icon: 'fas fa-check-square',\n                    children: app.translator.trans('flagrow-bazaar.admin.page.button.enable'),\n                    onclick: () => {\n                        repository.enableExtension(extension);\n                    }\n                }));\n            }\n\n            if (extension.installed() && extension.outdated()) {\n                items.add('update', Button.component({\n                    icon: 'fas fa-level-up',\n                    children: app.translator.trans('flagrow-bazaar.admin.page.button.update'),\n                    onclick: () => {\n                        this.props.extension = repository.updateExtension(extension);\n                    }\n                }));\n            }\n\n            if (extension.can_disable()) {\n                items.add('disable', Button.component({\n                    icon: 'fas fa-square',\n                    children: app.translator.trans('flagrow-bazaar.admin.page.button.disable'),\n                    onclick: () => {\n                        this.props.extension = repository.disableExtension(extension);\n                    }\n                }));\n            }\n\n            if (extension.can_install()) {\n                items.add('install', Button.component({\n                    icon: 'fas fa-plus-square',\n                    children: app.translator.trans('flagrow-bazaar.admin.page.button.install'),\n                    onclick: () => {\n                        this.props.extension = repository.installExtension(extension);\n                    }\n                }));\n            }\n        }\n\n        if (extension.premium() && !connected) {\n            items.add('subscribe', Button.component({\n                disabled: true,\n                icon: 'fas fa-shopping-cart',\n                children: app.translator.trans('flagrow-bazaar.admin.page.button.connect_to_subscribe'),\n            }));\n        }\n\n        if (extension.canCheckout() && connected) {\n            items.add('subscribe', Button.component({\n                icon: 'fas fa-shopping-cart',\n                children: app.translator.trans('flagrow-bazaar.admin.page.button.subscribe'),\n                onclick: () => {\n                    repository.premiumExtensionSubscribe(extension);\n                }\n            }));\n        }\n\n        if (extension.canSafelyUnsubscribe() && connected) {\n            items.add('unsubscribe', Button.component({\n                icon: 'fas fa-ban',\n                children: app.translator.trans('flagrow-bazaar.admin.page.button.unsubscribe'),\n                onclick: () => {\n                    repository.premiumExtensionUnsubscribe(extension);\n                }\n            }));\n        }\n\n        return items;\n    }\n\n    /**\n     * Get the Badge components that apply to this discussion.\n     *\n     * @return {ItemList}\n     * @public\n     */\n    badges(extension) {\n        const items = new ItemList();\n\n        if (!extension.flarumCompatibilityNext()) {\n            items.add('nextIncompatible', <Badge icon=\"fas fa-exclamation\"\n                   type=\"nextIncompatible\"\n                   label={app.translator.trans('flagrow-bazaar.admin.page.extension.next_incompatible')} />)\n        }\n        if (!extension.flarumCompatibilityLatest()) {\n            items.add('latestIncompatible', <Badge icon=\"fas fa-exclamation-circle\"\n                 type=\"latestIncompatible\"\n                 label={app.translator.trans('flagrow-bazaar.admin.page.extension.latest_incompatible')} />)\n        }\n        if (!extension.flarumCompatibilityCurrent()) {\n            items.add('incompatible', <Badge icon=\"fas fa-exclamation-triangle\"\n                 type=\"incompatible\"\n                 label={app.translator.trans('flagrow-bazaar.admin.page.extension.incompatible')} />)\n        }\n        if (extension.subscribed()) {\n            items.add('subscribed', <Badge icon=\"fas fa-shopping-cart\"\n                type=\"subscribed\"\n                label={app.translator.trans('flagrow-bazaar.admin.page.extension.subscribed')} />);\n        } else if (extension.premium()) {\n            items.add('premium', <Badge icon=\"fas fa-certificate\"\n                type=\"premium\"\n                label={app.translator.trans('flagrow-bazaar.admin.page.extension.premium')} />);\n        }\n        if (extension.pending()) {\n            items.add('pending', <Badge icon=\"fas fa-circle-notch fa-spin\"\n                type=\"pending\"\n                label={app.translator.trans('flagrow-bazaar.admin.page.extension.pending')} />);\n        }\n        if (extension.installed() && extension.outdated()) {\n            items.add('outdated', <Badge icon=\"fas fa-sort-numeric-down\"\n                type=\"outdated\"\n                label={app.translator.trans('flagrow-bazaar.admin.page.extension.outdated', {new: extension.highest_version() })} />)\n        }\n        if (extension.favorited()) {\n            items.add('favorited', <Badge icon=\"fas fa-heart\"\n                type=\"favorited\"\n                label={app.translator.trans('flagrow-bazaar.admin.page.extension.favorited')} />)\n        }\n        if (extension.installed() && !extension.enabled()) {\n            items.add('installed', <Badge icon=\"fas fa-plus-square\"\n                type=\"installed\"\n                label={app.translator.trans('flagrow-bazaar.admin.page.extension.installed')} />)\n        }\n        if (extension.enabled()) {\n            items.add('enabled', <Badge icon=\"fas fa-check-square\"\n                type=\"enabled\"\n                label={app.translator.trans('flagrow-bazaar.admin.page.extension.enabled')} />)\n        }\n\n        return items;\n    }\n}\n","import Component from 'flarum/Component';\nimport icon from \"flarum/helpers/icon\";\nimport Button from 'flarum/components/Button';\nimport LinkButton from 'flarum/components/LinkButton';\n\nexport default class BazaarLoader extends Component {\n\n    view() {\n        const error = this.props.loading() === 'error';\n\n        return m('div', {\n            className: 'Bazaar--Loader ' + (error ? 'Error' : null),\n            hidden: this.props.loading() === false\n        }, [\n            m('.Loader-modal', [\n                m('.Loader-icon', icon(error ? 'fas fa-exclamation-triangle' : 'fas fa-shopping-bag')),\n                m('div', [\n                    m('p', app.translator.trans(error ? 'flagrow-bazaar.admin.loader.error' : 'flagrow-bazaar.admin.loader.is_loading')),\n                    error ? [\n                        Button.component({\n                            className: 'Button Button--block',\n                            icon: 'fas fa-sync',\n                            onclick: () => location.reload(),\n                            children: app.translator.trans('flagrow-bazaar.admin.loader.refresh')\n                        }),\n                        Button.component({\n                            className: 'Button Button--block',\n                            icon: 'fas fa-times',\n                            onclick: () => this.props.loading(false),\n                            children: app.translator.trans('flagrow-bazaar.admin.loader.close')\n                        }),\n                        LinkButton.component({\n                            className: 'Button Button--block',\n                            icon: 'fas fa-bug',\n                            href: 'https://github.com/flagrow/bazaar/issues',\n                            target: '_blank',\n                            config: {}, // Disable internal Mithril routing\n                            children: app.translator.trans('flagrow-bazaar.admin.loader.report_issue')\n                        }),\n                    ] : null\n                ])\n            ])\n        ])\n    }\n}\n","import Component from 'flarum/Component';\nimport Button from 'flarum/components/Button';\nimport ExtensionListItem from './ExtensionListItem';\nimport BazaarLoader from \"./BazaarLoader\";\nimport Placeholder from 'flarum/components/Placeholder';\n\nexport default class ExtensionList extends Component {\n    init() {\n        /**\n         * Whether or not discussion results are loading.\n         *\n         * @type {Boolean}\n         */\n        this.loading = this.props.loading;\n\n        /**\n         * Whether or not there are more results that can be loaded.\n         *\n         * @type {Boolean}\n         */\n        this.moreResults = false;\n        this.resultMeta = {};\n\n        // this.repository = new ExtensionRepository(this.loading);\n\n        /**\n         * The discussions in the discussion list.\n         *\n         * @type {Extension[]}\n         */\n        this.extensions = [];\n\n        this.refresh();\n    }\n\n\n\n    view() {\n        let loading;\n\n        if (this.loading()) {\n            loading = BazaarLoader.component({loading: this.loading});\n        } else if (this.moreResults) {\n            loading = [\n                Button.component({\n                    children: app.translator.trans('flagrow-bazaar.admin.page.button.more', {current: this.resultMeta.pages_current + 1, total: this.resultMeta.pages_total}),\n                    className: 'Button Button--primary',\n                    onclick: this.loadMore.bind(this)\n                })\n            ];\n        }\n\n        if (this.extensions.length === 0 && !this.loading) {\n            let text = app.translator.trans('flagrow-bazaar.admin.page.state.no_results_available');\n\n            if (! this.props.authorized) {\n                text = app.translator.trans('flagrow-bazaar.admin.page.state.not_authorized');\n            }\n\n            return (\n                <div className=\"DiscussionList\">\n                    {Placeholder.component({text})}\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"ExtensionList-wrapper\">\n                <div className=\"ExtensionList\">\n                    {this.extensions.map(extension => {\n                        return ExtensionListItem.component({\n                                extension: extension,\n                                repository: this.props.repository,\n                                connected: this.props.connected,\n                                key: extension.package(),\n                            });\n                    })}\n                </div>\n                <div className=\"ExtensionList-loadMore\">\n                    {loading}\n                </div>\n            </div>\n        );\n    }\n\n    update(params) {\n        this.props.params = params;\n\n        this.refresh();\n    }\n\n    /**\n     * Clear and reload the discussion list.\n     *\n     * @public\n     */\n    refresh(clear = true) {\n        if (clear) {\n            this.loading(true);\n            this.extensions = [];\n        }\n\n        return this.loadResults().then(\n            results => {\n                this.extensions = [];\n                this.parseResults(results);\n            },\n            () => {\n                this.loading(false);\n                m.redraw();\n            }\n        );\n    }\n\n    /**\n     * Load a new page of discussion results.\n     *\n     * @param {Integer} offset The index to start the page at.\n     * @return {Promise}\n     */\n    loadResults(offset) {\n        const params = this.requestParams();\n        params.page = {offset};\n        params.include = params.include.join(',');\n\n        return app.store.find('bazaar-extensions', params);\n    }\n\n    /**\n     * Parse results and append them to the discussion list.\n     *\n     * @param {Extension[]} results\n     * @return {Extension[]}\n     */\n    parseResults(results) {\n        [].push.apply(this.extensions, results);\n\n        this.loading(false);\n        this.moreResults = !!results.payload.links.next;\n        this.resultMeta = results.payload.meta || {};\n\n        m.lazyRedraw();\n\n        return results;\n    }\n\n    /**\n     * Load the next page of discussion results.\n     *\n     * @public\n     */\n    loadMore() {\n        this.loading(true);\n\n        this.loadResults(this.extensions.length)\n            .then(this.parseResults.bind(this));\n    }\n\n    /**\n     * Get the parameters that should be passed in the API request to get\n     * discussion results.\n     *\n     * @return {Object}\n     * @api\n     */\n    requestParams() {\n        const params = this.props.params;\n        const out = {include: [], filter: {}};\n\n        out.sort = this.sortMap()[params.sort];\n\n        if (params.q) {\n            out.filter.q = params.q;\n        }\n\n        if (params.filter) {\n            out.filter = window.$.param(params.filter);\n        }\n\n        return out;\n    }\n\n    /**\n     * Get a map of sort keys (which appear in the URL, and are used for\n     * translation) to the API sort value that they represent.\n     *\n     * @return {Object}\n     */\n    sortMap() {\n        const map = {};\n\n        if (this.props.params.q) {\n            map.relevance = '';\n        }\n\n        return map;\n    }\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import Button from \"flarum/components/Button\";\nimport icon from 'flarum/helpers/icon';\nimport extract from 'flarum/utils/extract';\nimport extractText from 'flarum/utils/extractText';\n\nexport default class CustomCheckbox extends Button {\n    view() {\n        const attrs = Object.assign({}, this.props);\n\n        delete attrs.state;\n        delete attrs.children;\n\n        attrs.className = attrs.className || '';\n        attrs.type = attrs.type || 'button';\n\n        if (this.props.state) attrs.className += ' active';\n\n        // If nothing else is provided, we use the textual button content as tooltip\n        if (!attrs.title && this.props.children) {\n            attrs.title = extractText(this.props.children);\n        }\n\n        const iconName = extract(attrs, 'icon');\n        if (iconName) attrs.className += ' hasIcon';\n\n        const loading = extract(attrs, 'loading');\n        if (attrs.disabled || loading) {\n            attrs.className += ' disabled' + (loading ? ' loading' : '');\n            delete attrs.onclick;\n        }\n\n        return (\n            <button {...attrs}\n                onclick={this.onchange.bind(this)}\n                >\n                {this.getButtonContent()}\n            </button>\n        );\n    }\n\n    /**\n     * Run a callback when the state of the checkbox is changed.\n     *\n     * @param {Boolean} checked\n     * @protected\n     */\n    onchange() {\n        if (this.props.onchange) this.props.onchange(! this.props.state, this);\n    }\n}\n","import Component from \"flarum/Component\";\nimport CustomCheckbox from \"./CustomCheckbox\";\nimport debounce from \"../utils/debounce\";\n\nexport default class ExtensionSearch extends Component {\n    init() {\n        this.updateDebounce = debounce(() => {\n            if (this.props.onsubmit) this.props.onsubmit(this.props.params);\n        }, 500);\n    }\n\n    view() {\n        return m('div', [\n            m('fieldset', {className: 'ExtensionSearch'},\n                m('input[type=text].FormControl', {\n                    value: this.props.params.q || '',\n                    oninput: m.withAttr('value', term => this.search(term)),\n                    placeholder: app.translator.trans('flagrow-bazaar.admin.search.placeholder'),\n                })\n            ),\n            m('div', {className: 'ExtensionFilters ButtonGroup'}, [\n                CustomCheckbox.component({\n                    icon: 'fas fa-level-up',\n                    className: 'Button hasIcon',\n                    state: this.isToggled('update'),\n                    onchange: (checked) => this.toggleFilter('update', checked),\n                    children: app.translator.trans('flagrow-bazaar.admin.search.filter_update')\n                }),\n                CustomCheckbox.component({\n                    icon: 'fas fa-circle-notch',\n                    className: 'Button hasIcon',\n                    state: this.isToggled('pending'),\n                    onchange: (checked) => this.toggleFilter('pending', checked),\n                    children: app.translator.trans('flagrow-bazaar.admin.search.filter_pending')\n                }),\n                CustomCheckbox.component({\n                    icon: 'fas fa-plus-square',\n                    className: 'Button hasIcon',\n                    state: this.isToggled('installed'),\n                    onchange: (checked) => this.toggleFilter('installed', checked),\n                    children: app.translator.trans('flagrow-bazaar.admin.search.filter_installed')\n                }),\n                this.connected ? [\n                    CustomCheckbox.component({\n                        icon: 'fas fa-heart',\n                        className: 'Button hasIcon',\n                        state: this.isToggled('favorited'),\n                        onchange: (checked) => this.toggleFilter('favorited', checked),\n                        children: app.translator.trans('flagrow-bazaar.admin.search.filter_favorited')\n                    }),\n                    CustomCheckbox.component({\n                        icon: 'fas fa-shopping-cart',\n                        className: 'Button hasIcon',\n                        state: this.isToggled('subscribed'),\n                        onchange: (checked) => this.toggleFilter('subscribed', checked),\n                        children: app.translator.trans('flagrow-bazaar.admin.search.filter_subscribed')\n                    }),\n                ] : '',\n                CustomCheckbox.component({\n                    icon: 'fas fa-certificate',\n                    className: 'Button hasIcon',\n                    state: this.isToggled('premium'),\n                    onchange: (checked) => this.toggleFilter('premium', checked),\n                    children: app.translator.trans('flagrow-bazaar.admin.search.filter_premium')\n                }),\n            ])\n        ])\n    }\n\n    isToggled(name) {\n        const filter = this.props.params.filter || {};\n        const is = filter.is || [];\n\n        return is.indexOf(name) >= 0;\n    }\n\n    toggleFilter(name, checked) {\n        let filter = this.props.params.filter || {};\n        let is = filter.is || [];\n\n        const i = is.indexOf(name);\n\n        if (checked && i === -1) {\n            is.push(name);\n        } else if (!checked && i >= 0) {\n            is.splice(i, 1);\n        }\n\n        filter.is = is;\n\n        this.props.params.filter = filter;\n\n        this.updateDebounce();\n    }\n\n    search(term) {\n        this.props.params.q = term;\n\n        this.updateDebounce();\n    }\n}\n","/**\n * Based on _.debounce from underscore.js\n * Copyright (c) 2009-2017 Jeremy Ashkenas, DocumentCloud and Investigative\n * @see https://davidwalsh.name/javascript-debounce-function\n *\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n */\nexport default function (func, wait, immediate) {\n    let timeout;\n    return function () {\n        let context = this, args = arguments;\n        let later = function () {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n        };\n        let callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n    };\n};\n","import Modal from \"flarum/components/Modal\";\n\nexport default class FilePermissionsModal extends Modal {\n    className() {\n        return 'FilePermissionsModal';\n    }\n\n    title() {\n        return app.translator.trans('flagrow-bazaar.admin.modal.requirements.file-permissions.title');\n    }\n\n    content() {\n        var permissions = this.props.file_permissions;\n        var paths = [];\n\n        permissions.forEach(path => {\n            paths.push(m('li', m('span', {className: 'code'}, path)))\n        })\n\n        return m('div', {className: 'Modal-body'}, [\n                m('p', app.translator.trans(\n                    'flagrow-bazaar.admin.modal.requirements.file-permissions.description',\n                    {a: <a href=\"https://github.com/flagrow/bazaar/wiki/File-permissions\" target=\"_blank\"/>}\n                )),\n                m('ul', paths)\n            ]\n        );\n    }\n}\n","import Modal from \"flarum/components/Modal\";\n\nexport default class MemoryLimitModal extends Modal {\n    className() {\n        return 'MemoryLimitModal';\n    }\n\n    title() {\n        return app.translator.trans('flagrow-bazaar.admin.modal.requirements.php-memory_limit.title');\n    }\n\n    content() {\n        let memory_requested = this.props.memory_requested;\n        let memory_limit = this.props.memory_limit;\n\n        return m(\n            'div',\n            {className: 'Modal-body'},\n            app.translator.trans(\n                'flagrow-bazaar.admin.modal.requirements.php-memory_limit.description',\n                {\n                    required: memory_requested,\n                    limit: memory_limit,\n                    a: <a href=\"https://github.com/flagrow/bazaar/wiki/PHP-memory-limit\" target=\"_blank\"/>\n                }\n            )\n        );\n    }\n}\n","import Modal from \"flarum/components/Modal\";\nimport Button from \"flarum/components/Button\";\n\nexport default class BazaarConnectModal extends Modal {\n    className() {\n        return 'FilePermissionsModal';\n    }\n\n    title() {\n        return app.translator.trans('flagrow-bazaar.admin.modal.connect-bazaar.title');\n    }\n\n    content() {\n        let flagrowHost = this.props.flagrowHost;\n\n        return m('div', {className: 'Modal-body'}, [\n                m('p', app.translator.trans('flagrow-bazaar.admin.modal.connect-bazaar.description', {host: flagrowHost})),\n                m('div', {className: \"App-primaryControl\"}, [\n                    Button.component({\n                        type: 'submit',\n                        className: 'Button Button--primary Button--block',\n                        disabled: false,\n                        icon: 'check',\n                        children: app.translator.trans('flagrow-bazaar.admin.page.button.connect')\n                    })\n                ])\n            ]\n        );\n    }\n\n    connect() {\n        var popup = window.open();\n\n        app.request({\n            method: 'GET',\n            url: app.forum.attribute('apiUrl') + '/bazaar/connect'\n        }).then(response => {\n            if (response && response.redirect) {\n                popup.location = response.redirect;\n            } else {\n                popup.close()\n            }\n        });\n    }\n\n    /**\n     * Handle the modal form's submit event.\n     *\n     * @param {Event} e\n     */\n    onsubmit() {\n        this.connect();\n    }\n}\n","import app from 'flarum/app';\nimport SettingsModal from 'flarum/components/SettingsModal';\nimport Switch from 'flarum/components/Switch';\n\nexport default class BazaarSettingsModal extends SettingsModal {\n\n  title() {\n    return app.translator.trans('flagrow-bazaar.admin.modal.settings.title');\n  }\n\n  form() {\n    return [\n      m('div', { className: 'Form-group' }, [\n        m('label', { for: 'use-cron' }, app.translator.trans('flagrow-bazaar.admin.modal.settings.field.use_cron_for_tasks.label')),\n        Switch.component({\n          state: this.setting('flagrow.bazaar.use_cron_for_tasks')(),\n          onchange: this.setting('flagrow.bazaar.use_cron_for_tasks'),\n          children: app.translator.trans('flagrow-bazaar.admin.modal.settings.field.use_cron_for_tasks.toggle')\n        }),\n        m('span', app.translator.trans('flagrow-bazaar.admin.modal.settings.field.use_cron_for_tasks.description', {\n          a: <a href=\"https://github.com/flagrow/bazaar/wiki/Cron-task-processing\" target=\"_blank\"/>\n        }))\n      ]),\n      m('div', { className: 'Form-group' }, [\n        m('label', { for: 'bazaar-api-token' }, app.translator.trans('flagrow-bazaar.admin.modal.settings.field.token.label')),\n        m('input', {\n          id: 'bazaar-api-token',\n          className: 'FormControl',\n          bidi: this.setting('flagrow.bazaar.api_token')\n        }),\n        m('span', app.translator.trans('flagrow-bazaar.admin.modal.settings.field.token.description'))\n      ])\n    ];\n  }\n}\n","import Switch from 'flarum/components/Switch';\nimport SettingsModal from 'flarum/components/SettingsModal';\nimport saveSettings from 'flarum/utils/saveSettings';\nimport Button from 'flarum/components/Button';\n\nexport default class DashboardModal extends SettingsModal {\n  title() {\n    return app.translator.trans('flagrow-bazaar.admin.modal.dashboard.title');\n  }\n\n  form() {\n    const flagrowHost = this.props.flagrowHost;\n    const syncing = this.setting('flagrow.bazaar.sync', false);\n\n    return m('div', { className: 'Modal-body' }, [\n        m('p', app.translator.trans('flagrow-bazaar.admin.modal.dashboard.sync.description', { host: flagrowHost })),\n        Switch.component({\n          state: (syncing() === true || syncing() == 1),\n          onchange: this.updateSetting.bind(this, syncing, 'flagrow.bazaar.sync'),\n          children: app.translator.trans('flagrow-bazaar.admin.modal.dashboard.sync.switch', { host: flagrowHost })\n        }),\n      ]\n    );\n  }\n\n  submitButton() {\n    const flagrowHost = this.props.flagrowHost;\n    return m('div', {className: 'ButtonGroup'}, [\n      Button.component({\n        className: 'Button Connected',\n        icon: 'dashboard',\n        children: app.translator.trans('flagrow-bazaar.admin.modal.dashboard.visit-remote-dashboard'),\n        onclick: () => window.open(flagrowHost + '/home')\n      })\n    ]);\n  }\n\n  /**\n   * Updates setting in database.\n   * @param prop\n   * @param setting\n   * @param value\n   */\n  updateSetting(prop, setting, value) {\n    saveSettings({\n      [setting]: value\n    });\n\n    prop(value);\n  }\n}\n","import app from 'flarum/app';\nimport Component from 'flarum/Component';\nimport LinkButton from 'flarum/components/LinkButton';\nimport Button from 'flarum/components/Button';\nimport FilePermissionsModal from '../modals/FilePermissionsModal';\nimport MemoryLimitModal from '../modals/MemoryLimitModal';\nimport BazaarConnectModal from '../modals/BazaarConnectModal';\nimport BazaarSettingsModal from '../modals/BazaarSettingsModal';\nimport DashboardModal from '../modals/DashboardModal';\n\nexport default class BazaarPageHeader extends Component {\n    view() {\n        return (\n            <div className=\"ExtensionsPage-header\">\n                <div className=\"container\">\n                    {this.header()}\n                </div>\n            </div>\n        );\n    }\n\n    header() {\n        let buttons = [].concat(\n          this.pagesButtons(),\n          this.settingsButton(),\n          this.requirementsButtons(),\n          this.connectedButtons(),\n        );\n\n        return m('div', {className: 'ButtonGroup'}, buttons);\n    }\n\n    settingsButton() {\n      return [\n        Button.component({\n          className: 'Button Button--icon',\n          icon: 'fas fa-cog',\n          onclick: () => app.modal.show(new BazaarSettingsModal)\n        })\n      ];\n    }\n    /**\n     * Loads a list of buttons that give insight in the state of this installation.\n     * @returns {Array}\n     */\n    requirementsButtons() {\n        let memory_limit_met = app.data.settings['flagrow.bazaar.php.memory_limit-met'] || false;\n        let memory_limit = app.data.settings['flagrow.bazaar.php.memory_limit'];\n        let memory_requested = app.data.settings['flagrow.bazaar.php.memory_requested'];\n        let file_permissions = app.data.settings['flagrow.bazaar.file-permissions'] || [];\n\n        let components = [];\n\n        if (!memory_limit_met) {\n            components.push(\n                Button.component({\n                    className: 'Button Button--icon Requirement-MemoryLimit',\n                    icon: 'fas fa-signal',\n                    onclick: () => app.modal.show(new MemoryLimitModal({memory_requested, memory_limit}))\n                })\n            );\n        }\n\n        if (file_permissions.length > 0) {\n            components.push(Button.component({\n                className: 'Button Button--icon Requirement-FilePermissions',\n                icon: 'fas fa-hdd',\n                onclick: () => app.modal.show(new FilePermissionsModal({file_permissions}))\n            }));\n        }\n\n        return components;\n    }\n\n    connectedButtons() {\n        let connected = this.props.connected;\n        let flagrowHost = app.data.settings['flagrow.bazaar.flagrow-host'] || 'https://flagrow.io';\n\n        if (connected) {\n            return [\n                Button.component({\n                    className: 'Button Button--icon Connected',\n                    icon: 'fas fa-plug',\n                    onclick: () => app.modal.show(new DashboardModal({\n                        flagrowHost\n                    }))\n                }),\n            ]\n        }\n\n        return [\n            Button.component({\n                className: 'Button Button--icon Connect',\n                icon: 'fas fa-plug',\n                onclick: () => app.modal.show(new BazaarConnectModal({flagrowHost}))\n            }),\n        ]\n    }\n\n    pagesButtons() {\n        // Sometimes no route has been set as the current one\n        if (typeof app.current === 'undefined') {\n            return null;\n        }\n\n        const routeName = app.current.props.routeName;\n        let links = [];\n\n        links.push(LinkButton.component({\n            className: 'Button Button--icon',\n            icon: 'fas fa-shopping-bag',\n            href: app.route('flagrow-bazaar'),\n            title: app.translator.trans('flagrow-bazaar.admin.header.extensions'),\n            active: routeName === 'flagrow-bazaar'\n        }));\n\n        links.push(LinkButton.component({\n            className: 'Button Button--icon',\n            icon: 'fas fa-history',\n            href: app.route('flagrow-bazaar-tasks'),\n            title: app.translator.trans('flagrow-bazaar.admin.header.tasks'),\n            active: routeName === 'flagrow-bazaar-tasks'\n        }));\n\n        return links;\n    }\n}\n","import Component from \"flarum/Component\";\nimport ExtensionRepository from \"../utils/ExtensionRepository\";\nimport ExtensionList from \"./ExtensionList\";\nimport ExtensionSearch from \"./ExtensionSearch\";\nimport BazaarPageHeader from './BazaarPageHeader';\n\nexport default class BazaarPage extends Component {\n    init() {\n        app.current = this;\n\n        this.authorized = (app.data.settings['flagrow.bazaar.api_token'] || '').length > 0;\n        this.connected = app.data.settings['flagrow.bazaar.connected'] && app.data.settings['flagrow.bazaar.connected'] !== '0';\n        this.loading = m.prop(true);\n\n        this.params = this.params();\n\n        this.repository = new ExtensionRepository(this.loading);\n\n        this.extensionList = new ExtensionList({\n            params: this.params,\n            loading: this.loading,\n            repository: this.repository,\n            connected: this.connected,\n            authorized: this.authorized\n        });\n\n        this.search = ExtensionSearch.component({params: this.params, onsubmit: this.updateResults.bind(this)});\n    }\n\n    updateResults(params) {\n        this.params = params;\n\n        this.extensionList.update(params);\n    }\n\n    view() {\n        return m('div', {className: 'Bazaar Extensions'}, [\n            BazaarPageHeader.component({\n                connected: this.connected\n            }),\n            m('div', {className: 'ExtensionsPage-list'}, [\n                m('div', {className: 'container'}, [\n                    this.search,\n                    this.extensionList.render()\n                ])\n            ]),\n        ]);\n    }\n\n    /**\n     * Get URL parameters that stick between filter changes.\n     *\n     * @return {Object}\n     */\n    stickyParams() {\n        return {\n            sort: m.route.param('sort'),\n            q: m.route.param('q')\n        };\n    }\n\n\n    /**\n     * Get parameters to pass to the DiscussionList component.\n     *\n     * @return {Object}\n     */\n    params() {\n        const params = this.stickyParams();\n\n        params.filter = m.route.param('filter');\n\n        return params;\n    }\n}\n","import app from 'flarum/app';\n\nexport default class ExtensionRepository {\n    constructor(loading) {\n        this.tasks = m.prop([]);\n        this.nextPageUrl = null;\n        this.loading = loading;\n        this.resetNavigation();\n    }\n\n    loadNextPage() {\n        if (this.loading() || !this.nextPageUrl) {\n            return;\n        }\n\n        this.loading(true);\n\n        app.request({\n            method: 'GET',\n            url: this.nextPageUrl\n        }).then(result => {\n            const newTasks = result.data.map(data => app.store.createRecord('bazaar-tasks', data));\n            this.tasks(newTasks);\n            this.nextPageUrl = null;\n            this.loading(false);\n\n            m.redraw();\n        });\n    }\n\n    resetNavigation() {\n        this.loading(false);\n        this.nextPageUrl = app.forum.attribute('apiUrl') + '/bazaar/tasks';\n        this.tasks([]);\n    }\n\n}\n","import app from 'flarum/app';\nimport Component from \"flarum/Component\";\nimport icon from \"flarum/helpers/icon\";\nimport Button from \"flarum/components/Button\";\nimport humanTime from 'flarum/helpers/humanTime';\nimport fullTime from 'flarum/helpers/fullTime';\n\nexport default class TaskListItem extends Component {\n    init() {\n        this.extended = m.prop(false);\n    }\n\n    view() {\n        const task = this.props.task;\n        const iconName = (function() {\n            switch (task.status()) {\n                case 'success':\n                    return 'fas fa-check';\n                case 'exception':\n                    return 'fas fa-exclamation';\n                case 'working':\n                    return 'fas fa-spinner';\n            }\n            return 'fas fa-clock';\n        })();\n\n        // We need to wrap items in a tbody because Mithril 0.2 and therefore flarum/Component does not allow a list of vnodes to be returned from a view\n        // And we can't wrap <tr> in anything else without breaking the table\n        // Having multiple <tbody> does not seem to be too much an issue https://stackoverflow.com/a/3076790/3133038\n        return (\n            <tbody className={ 'TaskListItem status-' + task.status() }>\n                <tr>\n                    <td className=\"time-column\">{ humanTime(task.created_at()) }</td>\n                    <td className=\"status-column\" title={ app.translator.trans('flagrow-bazaar.admin.page.task.status.' + (task.status() !== null ? task.status() : 'unknown')) }><div className=\"status\">{ icon(iconName) }</div></td>\n                    <td className=\"command-column\">\n                        { app.translator.trans('flagrow-bazaar.admin.page.task.command.' + task.command(), {extension: (<strong>{ task.package() }</strong>)}) }\n                    </td>\n                    <td className=\"details-column\">\n                        { Button.component({\n                            icon: 'fas fa-plus',\n                            className: 'Button',\n                            onclick: () => { this.extended(!this.extended()); }\n                        }) }\n                    </td>\n                </tr>\n                { this.extended() ? (\n                    <tr>\n                        <td className=\"output-column\" colspan=\"4\">\n                            <dl>\n                                <dt>{ app.translator.trans('flagrow-bazaar.admin.page.task.attribute.created_at') }</dt>\n                                <dd>{ fullTime(task.created_at()) }</dd>\n                            </dl>\n                            <dl>\n                                <dt>{ app.translator.trans('flagrow-bazaar.admin.page.task.attribute.started_at') }</dt>\n                                <dd>{ fullTime(task.started_at()) }</dd>\n                            </dl>\n                            <dl>\n                                <dt>{ app.translator.trans('flagrow-bazaar.admin.page.task.attribute.finished_at') }</dt>\n                                <dd>{ fullTime(task.finished_at()) }</dd>\n                            </dl>\n                            <p>{ app.translator.trans('flagrow-bazaar.admin.page.task.header.output') }</p>\n                            <pre className=\"output\">{ task.output() }</pre>\n                        </td>\n                    </tr>\n                ) : null}\n            </tbody>\n        );\n    }\n}\n","import app from 'flarum/app';\nimport Component from 'flarum/Component';\nimport TaskRepository from './../utils/TaskRepository';\nimport BazaarPageHeader from './BazaarPageHeader';\nimport TaskListItem from './TaskListItem';\nimport BazaarLoader from './BazaarLoader';\n\nexport default class TasksPage extends Component {\n    init() {\n        // Used in the header\n        app.current = this;\n\n        this.loading = m.prop(false);\n        this.repository = new TaskRepository(this.loading);\n        this.repository.loadNextPage();\n        this.loader = BazaarLoader.component({loading: this.loading});\n        this.connected = app.data.settings['flagrow.bazaar.connected'] && app.data.settings['flagrow.bazaar.connected'] !== '0';\n    }\n\n    view() {\n        return (\n            <div className=\"ExtensionsPage Bazaar TaskPage\">\n                {BazaarPageHeader.component({connected: this.connected})}\n\n                <div className=\"ExtensionsPage-list\">\n                    <div className=\"container\">\n                        { this.taskGroups().map(\n                            group => group.tasks.length ? (\n                                <div>\n                                    <h2>{ group.title }</h2>\n                                    <table className=\"TaskPage-table\">\n                                        <thead>\n                                        <tr>\n                                            <th className=\"time-column\">{ app.translator.trans('flagrow-bazaar.admin.page.task.header.time') }</th>\n                                            <th className=\"status-column\">{ app.translator.trans('flagrow-bazaar.admin.page.task.header.status') }</th>\n                                            <th>{ app.translator.trans('flagrow-bazaar.admin.page.task.header.command') }</th>\n                                            <th className=\"details-column\">{ app.translator.trans('flagrow-bazaar.admin.page.task.header.details') }</th>\n                                        </tr>\n                                        </thead>\n                                        { group.tasks.map(\n                                            task => m(TaskListItem, {task: task})\n                                        ) }\n                                    </table>\n                                </div>\n                            ) : null\n                        ) }\n                    </div>\n                </div>\n                { this.loader }\n            </div>\n        );\n    }\n\n    /**\n     * Split tasks into three groups: today, this month and older\n     */\n    taskGroups() {\n        let taskGroups = [\n            {\n                title: app.translator.trans('flagrow-bazaar.admin.page.task.group.today'),\n                tasks: []\n            },\n            {\n                title: app.translator.trans('flagrow-bazaar.admin.page.task.group.lastmonth'),\n                tasks: []\n            },\n            {\n                title: app.translator.trans('flagrow-bazaar.admin.page.task.group.older'),\n                tasks: []\n            }\n        ];\n        let currentGroup = 0;\n\n        // Milliseconds from 1 January 1970 00:00:00 UTC\n        const today = (new Date()).setHours(0,0,0,0);\n\n        this.repository.tasks().forEach(task => {\n            // Milliseconds from 1 January 1970 00:00:00 UTC\n            const taskDate = new Date(task.created_at()).setHours(0,0,0,0);\n\n            switch (currentGroup) {\n                case 0:\n                    if (taskDate === today) {\n                        taskGroups[currentGroup].tasks.push(task);\n                    } else {\n                        currentGroup++;\n                    }\n                    break;\n                case 1:\n                    // Check if the date is within the last 30 days\n                    if ((today - taskDate) / (1000 * 3600 * 24) <= 30) {\n                        taskGroups[currentGroup].tasks.push(task);\n                    } else {\n                        currentGroup++;\n                    }\n                    break;\n                default:\n                    taskGroups[currentGroup].tasks.push(task);\n            }\n        });\n\n        return taskGroups;\n    }\n}\n","import { extend } from 'flarum/extend';\nimport app from 'flarum/app';\nimport Extension from './models/Extension';\nimport Task from './models/Task';\nimport addBazaarPage from './addBazaarPage';\nimport addTasksPage from './addTasksPage';\n\napp.initializers.add('flagrow-bazaar', app => {\n    app.store.models['bazaar-extensions'] = Extension;\n    app.store.models['bazaar-tasks'] = Task;\n\n    addBazaarPage();\n    addTasksPage();\n});\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport AdminNav from 'flarum/components/AdminNav';\nimport AdminLinkButton from 'flarum/components/AdminLinkButton';\nimport BazaarPage from './components/BazaarPage';\n\nexport default function () {\n    // create the route\n    app.routes['flagrow-bazaar'] = {path: '/flagrow/bazaar', component: BazaarPage.component()};\n    // settings toggle on native extensions page\n    app.extensionSettings['flagrow-bazaar'] = () => m.route(app.route('flagrow-bazaar'));\n    // Add tab to admin menu\n    extend(AdminNav.prototype, 'items', items => {\n        items.add('flagrow-bazaar', AdminLinkButton.component({\n            href: app.route('flagrow-bazaar'),\n            icon: 'fas fa-shopping-bag',\n            children: app.translator.trans('flagrow-bazaar.admin.nav.title'),\n            description: app.translator.trans('flagrow-bazaar.admin.nav.description')\n        }));\n    });\n}\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport TasksPage from './components/TasksPage';\n\nexport default function () {\n    app.routes['flagrow-bazaar-tasks'] = {path: '/flagrow/bazaar/tasks', component: TasksPage.component()};\n}\n"],"sourceRoot":""}